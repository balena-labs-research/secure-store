name: Run Golang Tests

on:
  push:

jobs:
  build-go:
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        job_name: ['linux', 'linux_386', 'mac_amd64', 'mac_arm64', 'windows']

        include:
          - job_name: linux
            os: ubuntu-latest
            go: '1.19.x'

          - job_name: linux_386
            os: ubuntu-latest
            go: '1.19.x'

          - job_name: mac_amd64
            os: macos-latest
            go: '1.19.x'

          - job_name: mac_arm64
            os: macos-latest
            go: '1.19.x'

          - job_name: windows
            os: windows-latest
            go: '1.19.x'

    name: ${{ matrix.job_name }}

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
          check-latest: true
          cache: true

      - name: Print Go version and environment
        shell: bash
        run: |
          printf "Using go at: $(which go)\n"
          printf "Go version: $(go version)\n"
          go env
          echo "Note: env variables passed in Makefiles override these env vars."

      - name: Run Ubuntu tests
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install fuse -y
          sudo make test

      - name: Run non-Ubuntu tests
        if: matrix.os != 'ubuntu-latest'
        shell: bash
        run: |
          make test
